name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install pnpm
      uses: pnpm/action-setup@v4
    
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
    
    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build
      run: pnpm run build
    
    - name: Lint
      run: pnpm run lint
    
    - name: List rules
      run: pnpm run list-rules

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v4
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build
      run: pnpm run build
    
    - name: Publish to npm (if version changed)
      run: |
        if [ "$(npm view eslint-plugin-functype version)" != "$(node -p "require('./package.json').version")" ]; then
          npm publish
        else
          echo "Version unchanged, skipping publish"
        fi
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}